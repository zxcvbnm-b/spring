<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.test.mapper.QuestionMapper" >
  <resultMap id="BaseResultMap" type="com.test.entity.Question" >
    <id column="question_id" property="questionId" jdbcType="INTEGER" />
    <result column="question_title" property="questionTitle" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="browse" property="browse" jdbcType="INTEGER" />
    <result column="reply" property="reply" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="describes" property="describes" jdbcType="VARCHAR" />
    <result column="label" property="label" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    question_id, question_title, create_time, browse, reply, user_id, describes, label
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.test.entity.QuestionExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from question
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <!-- 模糊查询 -->
   <select id="selectByExampleRegexp" resultMap="BaseResultMap" parameterType="com.test.entity.QuestionExample" >
   select * from question 
    <if test="search != null" >
     where   describes regexp #{search} 
    </if>
          ORDER BY create_time  DESC 
  </select>
  
  
  
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from question
    where question_id = #{questionId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from question
    where question_id = #{questionId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.test.entity.QuestionExample" >
    delete from question
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.test.entity.Question" >
    insert into question (question_id, question_title, create_time, 
      browse, reply, user_id, 
      describes, label)
    values (#{questionId,jdbcType=INTEGER}, #{questionTitle,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{browse,jdbcType=INTEGER}, #{reply,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, 
      #{describes,jdbcType=VARCHAR}, #{label,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.test.entity.Question" >
    insert into question
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="questionId != null" >
        question_id,
      </if>
      <if test="questionTitle != null" >
        question_title,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="browse != null" >
        browse,
      </if>
      <if test="reply != null" >
        reply,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="describes != null" >
        describes,
      </if>
      <if test="label != null" >
        label,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="questionId != null" >
        #{questionId,jdbcType=INTEGER},
      </if>
      <if test="questionTitle != null" >
        #{questionTitle,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="browse != null" >
        #{browse,jdbcType=INTEGER},
      </if>
      <if test="reply != null" >
        #{reply,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="describes != null" >
        #{describes,jdbcType=VARCHAR},
      </if>
      <if test="label != null" >
        #{label,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.test.entity.QuestionExample" resultType="java.lang.Integer" >
    select count(*) from question
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update question
    <set >
      <if test="record.questionId != null" >
        question_id = #{record.questionId,jdbcType=INTEGER},
      </if>
      <if test="record.questionTitle != null" >
        question_title = #{record.questionTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.browse != null" >
        browse = #{record.browse,jdbcType=INTEGER},
      </if>
      <if test="record.reply != null" >
        reply = #{record.reply,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.describes != null" >
        describes = #{record.describes,jdbcType=VARCHAR},
      </if>
      <if test="record.label != null" >
        label = #{record.label,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update question
    set question_id = #{record.questionId,jdbcType=INTEGER},
      question_title = #{record.questionTitle,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      browse = #{record.browse,jdbcType=INTEGER},
      reply = #{record.reply,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      describes = #{record.describes,jdbcType=VARCHAR},
      label = #{record.label,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.test.entity.Question" >
    update question
    <set >
      <if test="questionTitle != null" >
        question_title = #{questionTitle,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="browse != null" >
        browse = #{browse,jdbcType=INTEGER},
      </if>
      <if test="reply != null" >
        reply = #{reply,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="describes != null" >
        describes = #{describes,jdbcType=VARCHAR},
      </if>
      <if test="label != null" >
        label = #{label,jdbcType=VARCHAR},
      </if>
    </set>
    where question_id = #{questionId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.test.entity.Question" >
    update question
    set question_title = #{questionTitle,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      browse = #{browse,jdbcType=INTEGER},
      reply = #{reply,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      describes = #{describes,jdbcType=VARCHAR},
      label = #{label,jdbcType=VARCHAR}
    where question_id = #{questionId,jdbcType=INTEGER}
  </update>
  <!-- 添加浏览数目 -->
   <update id="addQuesttionCount" parameterType="com.test.entity.Question" >
    update question
    set 
      browse = browse+1
      where question_id = #{record.questionId,jdbcType=INTEGER}
  </update>
    <!-- 添加浏览数目 -->
   <update id="addQuesttionreply" parameterType="com.test.entity.Question" >
    update question
    set 
      reply = reply+1
      where question_id = #{record.questionId,jdbcType=INTEGER}
  </update>
  
  <!-- 查找相关问题 -->
  <select id="SelectByTat" resultMap="BaseResultMap" parameterType="com.test.entity.Question" >
    select * from question where  question_id!=#{record.questionId,jdbcType=INTEGER} and  describes regexp #{record.describes}  
  </select>
</mapper>